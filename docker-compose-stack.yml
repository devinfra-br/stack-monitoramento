version: '3.7'
services:
  prometheus:
      image: prom/prometheus
      volumes:
      - ./conf/prometheus/:/etc/prometheus/
      - prometheus_data:/var/lib/prometheus
      depends_on:
        - cadvisor:cadvisor
        - node-exporter:node-exporter
      networks:
        - monitoring
      ports:
        - 9090:9090  
      labels:
        - "setup=main"  

  node-exporter:
    image: quay.io/prometheus/node-exporter
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
    deploy: 
      mode: global  
    networks:
      - monitoring
    ports:
      - 9100:9100

  alertmaneger:
    image: prom/alertmanager
    volumes: 
      - ./conf/alertmanager:/etc/alertmaneger
    networks:
      - monitoring
    ports:  
      - "9093:9093"
    labels:
      - "setup=main"   

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    ports:
      - 8081:8080

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    env_file:
      - grafana.config
    depends_on:
      - prometheus      
    networks:
      - monitoring
    labels:
      - "setup=main"  

  elasticsearch:
    image: codeviewconsultoria/elasticsearch:7.9.1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: monitoring
      discovery.type: single-node
      xpack.security.enabled: 'false'
      xpack.monitoring.enabled: 'false'
      xpack.graph.enabled: 'false'
      xpack.watcher.enabled: 'false'
    networks:
      - monitoring
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == master  
    labels:
      - "setup=main"  

  logstash:
    image: codeviewconsultoria/logstash:7.9.1
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    deploy:
      mode: global  
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  logspout:
    image: bekt/logspout-logstash
    environment:
      ROUTE_URIS: 'logstash://logstash:5000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 30s

  kibana:
    image: codeviewconsultoria/kibana:7.9.1
    ports:
      - "5601:5601"
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    labels:
      - "setup=main"  
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      XPACK_SECURITY_ENABLED: 'false'
      XPACK_MONITORING_ENABLED: 'false'
    deploy:
      replicas: 1
      
networks:
  monitoring:

volumes:
    prometheus_data:
    grafana_data:
    elasticsearch_data: