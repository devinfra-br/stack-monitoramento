version: '3.7'

services:
  prometheus:
      image: prom/prometheus
      volumes:
        - ./conf/prometheus/:/etc/prometheus/
        - prometheus_data:/var/lib/prometheus
      depends_on:
        - cadvisor:cadvisor
        - node-exporter:node-exporter
      networks:
        - monitoring
      ports:
        - 9090:9090  
      labels:
        - "setup=main"  
      deploy:
        mode: replicated
        replicas: 1
        resources:
          limits:
            cpus: '0.50'
            memory: 1024M
          reservations:
            cpus: '0.50'
            memory: 128M

  node-exporter:
    image: quay.io/prometheus/node-exporter
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command: -collector.procfs "/host/proc" -collector.sysfs /host/sys -collector.textfile.directory /etc/node-exporter/ -collectors.enabled 'conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs' -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - monitoring
    ports:
      - 9100:9100
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 32M
        reservations:
          cpus: '0.10'
          memory: 16M 

  tcp-socat:
    image: alpine/socat
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock  
    networks:
      - monitoring
    ports:
      - "2376:2375"  
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.05'
          memory: 6M
        reservations:
          cpus: '0.05'
          memory: 4M
          
  alertmaneger:
    image: prom/alertmanager
    volumes: 
      - ./conf/alertmanager:/etc/alertmaneger
    environment:
      SLACK_API: ""
      LOGSTASH_URL: http://logstash:8080/      
    networks:
      - monitoring
    ports:  
      - "9093:9093"
    labels:
      - "setup=main"   
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.01'
          memory: 32M
        reservations:
          cpus: '0.01'
          memory: 16M
  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    ports:
      - 8081:8080
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    env_file:
      - grafana.config
    depends_on:
      - prometheus      
    networks:
      - monitoring
    labels:
      - "setup=main"  

  elasticsearch:
    image: codeviewconsultoria/elasticsearch:7.9.1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: monitoring
      discovery.type: single-node
      xpack.security.enabled: 'false'
      xpack.monitoring.enabled: 'false'
      xpack.graph.enabled: 'false'
      LOGSPOUT: ignore
      cluster.name: docker-cluster
      xpack.watcher.enabled: 'false'
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      ELASTICSEARCH_ENDPOINT: http://elasticsearch:9200
      ELASTICSEARCH_USER: elastic
      ELASTICSEARCH_PASSWORD: monitoring
    networks:
      - monitoring
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 640M
        reservations:
          cpus: '0.5'
          memory: 512M
      placement:
        constraints:
          - node.hostname == master  
    labels:
      - "setup=main"  

  logstash:
    image: codeviewconsultoria/logstash:7.9.1
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS:           "-Xmx256m -Xms256m"
      DEBUG:                  "${LOGSTASH_DEBUG:-false}"
      LOGSPOUT:               ignore
      ELASTICSEARCH_USER:     elastic
      ELASTICSEARCH_PASSWORD: monitoring
      ELASTICSEARCH_ADDR:     elasticsearch
      ELASTICSEARCH_PORT:     9200  
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.25'
          memory: 800M
        reservations:
          cpus: '0.25'
          memory: 400M

  logspout:
    image: bekt/logspout-logstash
    environment:
      ROUTE_URIS: 'logstash://logstash:5000'
      DOCKER_LABELS: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.25'
          memory: 64M
        reservations:
          cpus: '0.25'
          memory: 32M

  kibana:
    image: codeviewconsultoria/kibana:7.9.1
    ports:
      - "5601:5601"
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    labels:
      - "setup=main"  
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      LOGSPOUT: ignore
      XPACK_SECURITY_ENABLED: 'false'
      XPACK_MONITORING_ENABLED: 'false'
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.25'
          memory: 384M
        reservations:
          cpus: '0.25'
          memory: 256M
      
networks:
  monitoring:

volumes:
    prometheus_data:
    grafana_data:
    elasticsearch_data: