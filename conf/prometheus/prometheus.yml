global:
  scrape_interval:     10s
  evaluation_interval: 10s
  external_labels:
      monitor: 'Stack-Monitoring'
rule_files:
  - "alert.rules"
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
         - targets: ['localhost:9090']

  - job_name: 'node-exporter'
    dns_sd_configs:
    - names:
      - 'tasks.node-exporter'
      type: 'A'
      port: 9100
      
  - job_name: 'cadvisor'
    dns_sd_configs:
    - names:
      - 'tasks.cadvisor'
      type: 'A'
      port: 8080

  - job_name: 'tcp-socat'
    dns_sd_configs:
    - names:
      - 'tasks.tcp-socat'
      type: 'A'
      port: 2375
#  - job_name: 'server-master'
#    metrics_path: '/api/v1/allmetrics'
#    params:
#      format: [prometheus]
#    honor_labels: true
#    scrape_interval: 5s
#    static_configs:
#         - targets: ['192.168.10.103:19999']

  # Create a job for Docker Swarm containers.
  - job_name: 'dockerswarm'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers that have a `prometheus-job` label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        regex: .+
        action: keep
      # Use the prometheus-job Swarm label as Prometheus job label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        target_label: job